{
  "address": "0x79D580448e07606E9fbf9F7947bAe067853cdb92",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "baseToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "quoteToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "dppController",
          "type": "address"
        }
      ],
      "name": "DelDPPCtrl",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "baseToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "quoteToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "dpp",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "dppController",
          "type": "address"
        }
      ],
      "name": "NewDPP",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdminTemp",
          "type": "address"
        }
      ],
      "name": "UpdateAdminTemplate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newCtrlTemp",
          "type": "address"
        }
      ],
      "name": "UpdateCtrlTemplate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newDODOApprove",
          "type": "address"
        }
      ],
      "name": "UpdateDODOApprove",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newDPPTemplate",
          "type": "address"
        }
      ],
      "name": "UpdateDppTemplate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newFeeModel",
          "type": "address"
        }
      ],
      "name": "UpdateFeeModel",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newMaintainer",
          "type": "address"
        }
      ],
      "name": "UpdateMaintainer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CLONE_FACTORY",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "creator_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "baseToken_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "quoteToken_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "lpFeeRate_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "k_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "i_",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "o_",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isOpenTwap_",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isOracleEnabled_",
          "type": "bool"
        }
      ],
      "name": "createDPPController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "baseToken_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "quoteToken_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dppCtrlAddress_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "creator_",
          "type": "address"
        }
      ],
      "name": "delOnePool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dodoApproveProxy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dodoDefaultMaintainer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dodoDefautMtFeeRateModel",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dppAdminTemplate",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dppControllerTemplate",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dppTemplate",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "admin_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "cloneFactory_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dppTemplate_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dppAdminTemplate_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dppControllerTemplate_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "defaultMaintainer_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "defaultMtFeeRateModel_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dodoApproveProxy_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "weth_",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "registry",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "setAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newDPPAdminTemplate_",
          "type": "address"
        }
      ],
      "name": "updateAdminTemplate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newController_",
          "type": "address"
        }
      ],
      "name": "updateControllerTemplate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newFeeModel_",
          "type": "address"
        }
      ],
      "name": "updateDefaultFeeModel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newMaintainer_",
          "type": "address"
        }
      ],
      "name": "updateDefaultMaintainer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newDodoApprove_",
          "type": "address"
        }
      ],
      "name": "updateDodoApprove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newDPPTemplate_",
          "type": "address"
        }
      ],
      "name": "updateDppTemplate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x9bf2287bf82343607b0ca9d75be4c7ca08fcd00aaf4e13b29a044a49b95c288a",
  "receipt": {
    "to": null,
    "from": "0x00d7A6a2F161d3f4971a3d1B071Ef55b284FD3Bf",
    "contractAddress": "0x79D580448e07606E9fbf9F7947bAe067853cdb92",
    "transactionIndex": 131,
    "gasUsed": "1314621",
    "logsBloom": "0x
    "blockHash": "0xdfd0d703c52d78c8fce8393cb2954eb7be2db8bec5627ba10ef80a4eeeaa646c",
    "transactionHash": "0x9bf2287bf82343607b0ca9d75be4c7ca08fcd00aaf4e13b29a044a49b95c288a",
    "logs": [
      {
        "transactionIndex": 131,
        "blockNumber": 22364401,
        "transactionHash": "0x9bf2287bf82343607b0ca9d75be4c7ca08fcd00aaf4e13b29a044a49b95c288a",
        "address": "0x79D580448e07606E9fbf9F7947bAe067853cdb92",
        "topics": [
          "0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 345,
        "blockHash": "0xdfd0d703c52d78c8fce8393cb2954eb7be2db8bec5627ba10ef80a4eeeaa646c"
      }
    ],
    "blockNumber": 22364401,
    "cumulativeGasUsed": "14981708",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "010d19d2824a92bd25be986df93e8d50",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dppController\",\"type\":\"address\"}],\"name\":\"DelDPPCtrl\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dpp\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dppController\",\"type\":\"address\"}],\"name\":\"NewDPP\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdminTemp\",\"type\":\"address\"}],\"name\":\"UpdateAdminTemplate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newCtrlTemp\",\"type\":\"address\"}],\"name\":\"UpdateCtrlTemplate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newDODOApprove\",\"type\":\"address\"}],\"name\":\"UpdateDODOApprove\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newDPPTemplate\",\"type\":\"address\"}],\"name\":\"UpdateDppTemplate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newFeeModel\",\"type\":\"address\"}],\"name\":\"UpdateFeeModel\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newMaintainer\",\"type\":\"address\"}],\"name\":\"UpdateMaintainer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLONE_FACTORY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creator_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseToken_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quoteToken_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lpFeeRate_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"k_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"i_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"o_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isOpenTwap_\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isOracleEnabled_\",\"type\":\"bool\"}],\"name\":\"createDPPController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"baseToken_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quoteToken_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dppCtrlAddress_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"creator_\",\"type\":\"address\"}],\"name\":\"delOnePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dodoApproveProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dodoDefaultMaintainer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dodoDefautMtFeeRateModel\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dppAdminTemplate\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dppControllerTemplate\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dppTemplate\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"cloneFactory_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dppTemplate_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dppAdminTemplate_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dppControllerTemplate_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"defaultMaintainer_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"defaultMtFeeRateModel_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dodoApproveProxy_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"weth_\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDPPAdminTemplate_\",\"type\":\"address\"}],\"name\":\"updateAdminTemplate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController_\",\"type\":\"address\"}],\"name\":\"updateControllerTemplate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newFeeModel_\",\"type\":\"address\"}],\"name\":\"updateDefaultFeeModel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newMaintainer_\",\"type\":\"address\"}],\"name\":\"updateDefaultMaintainer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDodoApprove_\",\"type\":\"address\"}],\"name\":\"updateDodoApprove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDPPTemplate_\",\"type\":\"address\"}],\"name\":\"updateDppTemplate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"So. Lu\",\"kind\":\"dev\",\"methods\":{\"createDPPController(address,address,address,uint256,uint256,uint256,address,bool,bool)\":{\"params\":{\"baseToken_\":\"basetoken address\",\"creator_\":\"dpp controller's admin and dppAdmin's operator\",\"i_\":\"base to quote price, decimals 18 - baseTokenDecimals+ quoteTokenDecimals. If use oracle, i set here wouldn't be used.\",\"isOpenTwap_\":\"use twap price or not\",\"isOracleEnabled_\":\"use oracle or not\",\"k_\":\"a param for swap curve, limit in [0\\uff0c10**18], unit is  10**18\\uff0c0 is stable price curve\\uff0c10**18 is bonding curve like uni\",\"lpFeeRate_\":\"lp fee rate, unit is 10**18, range in [0, 10**18], eg 3,00000,00000,00000 = 0.003 = 0.3%\",\"o_\":\"oracle address\",\"quoteToken_\":\"quotetoken address\"}}},\"title\":\"DppController\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createDPPController(address,address,address,uint256,uint256,uint256,address,bool,bool)\":{\"notice\":\"create dpp Controller\"},\"updateDefaultFeeModel(address)\":{\"notice\":\"change dpp param - dodo feeModel\"},\"updateDefaultMaintainer(address)\":{\"notice\":\"change dpp param - dodo maintainer\"},\"updateDodoApprove(address)\":{\"notice\":\"change dpp param - dodo approve\"}},\"notice\":\"Use this contract to create controller\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/factory/DuetDppFactory.sol\":\"DuetDPPFactory\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = _setInitializedVersion(1);\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\\n     * initialization.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        bool isTopLevelCall = _setInitializedVersion(version);\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(version);\\n        }\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     */\\n    function _disableInitializers() internal virtual {\\n        _setInitializedVersion(type(uint8).max);\\n    }\\n\\n    function _setInitializedVersion(uint8 version) private returns (bool) {\\n        // If the contract is initializing we ignore whether _initialized is set in order to support multiple\\n        // inheritance patterns, but we only do this in the context of a constructor, and for the lowest level\\n        // of initializers, because in other contexts the contract may have been reentered.\\n        if (_initializing) {\\n            require(\\n                version == 1 && !AddressUpgradeable.isContract(address(this)),\\n                \\\"Initializable: contract is already initialized\\\"\\n            );\\n            return false;\\n        } else {\\n            require(_initialized < version, \\\"Initializable: contract is already initialized\\\");\\n            _initialized = version;\\n            return true;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x7454006cccb737612b00104d2f606d728e2818b778e7e55542f063c614ce46ba\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\"},\"contracts/external/interfaces/IOracle.sol\":{\"content\":\"/*\\n\\n    Copyright 2021 DODO ZOO.\\n    SPDX-License-Identifier: Apache-2.0\\n\\n*/\\n\\npragma solidity 0.8.9;\\n\\ninterface IOracle {\\n    function getPrice(address base)\\n        external\\n        view\\n        returns (\\n            uint256 latestPrice,\\n            bool isValid,\\n            bool isStale,\\n            uint256 timestamp\\n        );\\n\\n    function prices(address base) external view returns (uint256);\\n\\n    function isFeasible(address base) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xe2a09f323818e02ff9a8580469a66149c7201a123aede39c3d9cc804384a5d89\",\"license\":\"Apache-2.0\"},\"contracts/factory/DuetDppFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity 0.8.9;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport { ICloneFactory } from \\\"../lib/CloneFactory.sol\\\";\\nimport { IDPPOracle } from \\\"../interfaces/IDPPOracle.sol\\\";\\nimport { IDPPController } from \\\"../interfaces/IDPPController.sol\\\";\\nimport { IDPPOracleAdmin } from \\\"../interfaces/IDPPOracleAdmin.sol\\\";\\nimport { IOracle } from \\\"../external/interfaces/IOracle.sol\\\";\\nimport \\\"../lib/Adminable.sol\\\";\\n\\n/// @title DppController\\n/// @author So. Lu\\n/// @notice Use this contract to create controller\\ncontract DuetDPPFactory is Adminable, Initializable {\\n    // ============ default ============\\n\\n    address public CLONE_FACTORY;\\n    address public WETH;\\n    address public dodoDefautMtFeeRateModel;\\n    address public dodoApproveProxy;\\n    address public dodoDefaultMaintainer;\\n\\n    // ============ Templates ============\\n\\n    address public dppTemplate;\\n    address public dppAdminTemplate;\\n    address public dppControllerTemplate;\\n\\n    // ============registry and adminlist ==========\\n\\n    // base->quote->dppController\\n    mapping(address => mapping(address => address)) public registry;\\n\\n    // ============ Events ============\\n\\n    event NewDPP(address baseToken, address quoteToken, address creator, address dpp, address dppController);\\n    event DelDPPCtrl(address baseToken, address quoteToken, address creator, address dppController);\\n    event UpdateMaintainer(address newMaintainer);\\n    event UpdateFeeModel(address newFeeModel);\\n    event UpdateDODOApprove(address newDODOApprove);\\n    event UpdateDppTemplate(address newDPPTemplate);\\n    event UpdateCtrlTemplate(address newCtrlTemp);\\n    event UpdateAdminTemplate(address newAdminTemp);\\n\\n    constructor() initializer {}\\n\\n    function initialize(\\n        address admin_,\\n        address cloneFactory_,\\n        address dppTemplate_,\\n        address dppAdminTemplate_,\\n        address dppControllerTemplate_,\\n        address defaultMaintainer_,\\n        address defaultMtFeeRateModel_,\\n        address dodoApproveProxy_,\\n        address weth_\\n    ) public initializer {\\n        require(admin_ != address(0), \\\"Duet_dpp_factory: admin is zero address\\\");\\n        _setAdmin(admin_);\\n        WETH = weth_;\\n\\n        CLONE_FACTORY = cloneFactory_;\\n        dppTemplate = dppTemplate_;\\n        dppAdminTemplate = dppAdminTemplate_;\\n        dppControllerTemplate = dppControllerTemplate_;\\n\\n        dodoDefaultMaintainer = defaultMaintainer_;\\n        dodoDefautMtFeeRateModel = defaultMtFeeRateModel_;\\n        dodoApproveProxy = dodoApproveProxy_;\\n\\n        // emit events\\n        emit UpdateMaintainer(defaultMaintainer_);\\n        emit UpdateFeeModel(defaultMtFeeRateModel_);\\n        emit UpdateDODOApprove(dodoApproveProxy_);\\n        emit UpdateDppTemplate(dppTemplate_);\\n        emit UpdateCtrlTemplate(dppControllerTemplate_);\\n        emit UpdateAdminTemplate(dppAdminTemplate_);\\n    }\\n\\n    // ============ Admin Operation Functions ============\\n\\n    /// @notice change dpp param - dodo maintainer\\n    function updateDefaultMaintainer(address newMaintainer_) external onlyAdmin {\\n        require(newMaintainer_ != address(0), \\\"Duet_dpp_factory: maintainer is zero address\\\");\\n        dodoDefaultMaintainer = newMaintainer_;\\n        emit UpdateMaintainer(newMaintainer_);\\n    }\\n\\n    /// @notice change dpp param - dodo feeModel\\n    function updateDefaultFeeModel(address newFeeModel_) external onlyAdmin {\\n        require(newFeeModel_ != address(0), \\\"Duet_dpp_factory: feeModel is zero address\\\");\\n        dodoDefautMtFeeRateModel = newFeeModel_;\\n        emit UpdateFeeModel(newFeeModel_);\\n    }\\n\\n    /// @notice change dpp param - dodo approve\\n    function updateDodoApprove(address newDodoApprove_) external onlyAdmin {\\n        require(newDodoApprove_ != address(0), \\\"Duet_dpp_factory: dodoApprove is zero address\\\");\\n        dodoApproveProxy = newDodoApprove_;\\n        emit UpdateDODOApprove(newDodoApprove_);\\n    }\\n\\n    function updateDppTemplate(address newDPPTemplate_) external onlyAdmin {\\n        require(newDPPTemplate_ != address(0), \\\"Duet_dpp_factory: dpp template is zero address\\\");\\n        dppTemplate = newDPPTemplate_;\\n        emit UpdateDppTemplate(newDPPTemplate_);\\n    }\\n\\n    function updateAdminTemplate(address newDPPAdminTemplate_) external onlyAdmin {\\n        require(newDPPAdminTemplate_ != address(0), \\\"Duet_dpp_factory: dpp admin template is zero address\\\");\\n        dppAdminTemplate = newDPPAdminTemplate_;\\n        emit UpdateAdminTemplate(newDPPAdminTemplate_);\\n    }\\n\\n    function updateControllerTemplate(address newController_) external onlyAdmin {\\n        require(newController_ != address(0), \\\"Duet_dpp_factory: dpp ctrl template is zero address\\\");\\n        dppControllerTemplate = newController_;\\n        emit UpdateCtrlTemplate(newController_);\\n    }\\n\\n    function delOnePool(\\n        address baseToken_,\\n        address quoteToken_,\\n        address dppCtrlAddress_,\\n        address creator_\\n    ) external onlyAdmin {\\n        require(registry[baseToken_][quoteToken_] != address(0), \\\"pool not exist\\\");\\n        registry[baseToken_][quoteToken_] = address(0);\\n        emit DelDPPCtrl(baseToken_, quoteToken_, creator_, dppCtrlAddress_);\\n    }\\n\\n    // ============ Functions ============\\n\\n    function _createDODOPrivatePool() internal returns (address newPrivatePool) {\\n        newPrivatePool = ICloneFactory(CLONE_FACTORY).clone(dppTemplate);\\n    }\\n\\n    function _createDPPAdminModel() internal returns (address newDppAdminModel) {\\n        newDppAdminModel = ICloneFactory(CLONE_FACTORY).clone(dppAdminTemplate);\\n    }\\n\\n    /// @notice create dpp Controller\\n    /// @param creator_ dpp controller's admin and dppAdmin's operator\\n    /// @param baseToken_ basetoken address\\n    /// @param quoteToken_ quotetoken address\\n    /// @param lpFeeRate_ lp fee rate, unit is 10**18, range in [0, 10**18], eg 3,00000,00000,00000 = 0.003 = 0.3%\\n    /// @param k_ a param for swap curve, limit in [0\\uff0c10**18], unit is  10**18\\uff0c0 is stable price curve\\uff0c10**18 is bonding curve like uni\\n    /// @param i_ base to quote price, decimals 18 - baseTokenDecimals+ quoteTokenDecimals. If use oracle, i set here wouldn't be used.\\n    /// @param o_ oracle address\\n    /// @param isOpenTwap_ use twap price or not\\n    /// @param isOracleEnabled_ use oracle or not\\n    function createDPPController(\\n        address creator_,\\n        address baseToken_,\\n        address quoteToken_,\\n        uint256 lpFeeRate_,\\n        uint256 k_,\\n        uint256 i_,\\n        address o_,\\n        bool isOpenTwap_,\\n        bool isOracleEnabled_\\n    ) external onlyAdmin {\\n        require(\\n            registry[baseToken_][quoteToken_] == address(0) && registry[quoteToken_][baseToken_] == address(0),\\n            \\\"HAVE CREATED\\\"\\n        );\\n        if (isOracleEnabled_) {\\n            require(IOracle(o_).prices(address(baseToken_)) > 0, \\\"Duet Dpp Factory: set invalid oracle\\\");\\n        }\\n        address dppAddress;\\n        address dppController;\\n        {\\n            dppAddress = _createDODOPrivatePool();\\n            address dppAdminModel = _createDPPAdminModel();\\n            IDPPOracle(dppAddress).init(\\n                dppAdminModel,\\n                dodoDefaultMaintainer,\\n                baseToken_,\\n                quoteToken_,\\n                lpFeeRate_,\\n                dodoDefautMtFeeRateModel,\\n                k_,\\n                i_,\\n                o_,\\n                isOpenTwap_,\\n                isOracleEnabled_\\n            );\\n\\n            dppController = _createDPPController(creator_, dppAddress, dppAdminModel);\\n\\n            IDPPOracleAdmin(dppAdminModel).init(\\n                dppController, // owner\\n                dppAddress,\\n                dppController, // del dpp admin's operator\\n                dodoApproveProxy\\n            );\\n        }\\n\\n        registry[baseToken_][quoteToken_] = dppController;\\n        emit NewDPP(baseToken_, quoteToken_, creator_, dppAddress, dppController);\\n    }\\n\\n    function _createDPPController(\\n        address admin_,\\n        address dppAddress_,\\n        address dppAdminAddress_\\n    ) internal returns (address dppController) {\\n        dppController = ICloneFactory(CLONE_FACTORY).clone(dppControllerTemplate);\\n        IDPPController(dppController).init(admin_, dppAddress_, dppAdminAddress_, WETH);\\n    }\\n}\\n\",\"keccak256\":\"0x26fd3cdbe4798c16b0670267c1f0f27b033614bf3c48f741a162249a2b24d29a\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/IDPPController.sol\":{\"content\":\"pragma solidity 0.8.9;\\npragma experimental ABIEncoderV2;\\n\\ninterface IDPPController {\\n    function init(\\n        address admin,\\n        address dppAddress,\\n        address dppAdminAddress,\\n        address weth\\n    ) external;\\n\\n    function _BASE_TOKEN_() external view returns (address base);\\n\\n    function _QUOTE_TOKEN_() external view returns (address quote);\\n\\n    function recommendBaseAndQuote(uint256 shareAmount_)\\n        external\\n        view\\n        returns (uint256 baseAmount, uint256 quoteAmount);\\n}\\n\",\"keccak256\":\"0x327daa05bf09d08f07ebf59d17af55e52a0e24697cd688c59b57aff3d5893ad4\"},\"contracts/interfaces/IDPPOracle.sol\":{\"content\":\"pragma solidity 0.8.9;\\npragma experimental ABIEncoderV2;\\n\\ninterface IDPPOracle {\\n    function init(\\n        address owner,\\n        address maintainer,\\n        address baseTokenAddress,\\n        address quoteTokenAddress,\\n        uint256 lpFeeRate,\\n        address mtFeeRateModel,\\n        uint256 k,\\n        uint256 i,\\n        address o,\\n        bool isOpenTWAP,\\n        bool isOracleEnabled\\n    ) external;\\n\\n    function _MT_FEE_RATE_MODEL_() external returns (address);\\n\\n    function _O_() external returns (address);\\n\\n    function _IS_ORACLE_ENABLED() external returns (bool);\\n}\\n\",\"keccak256\":\"0x8e54211c9e652572ff0d9649f56678b24365b5b02c3b4bcd0d92e53a94dcbb40\"},\"contracts/interfaces/IDPPOracleAdmin.sol\":{\"content\":\"pragma solidity 0.8.9;\\npragma experimental ABIEncoderV2;\\n\\ninterface IDPPOracleAdmin {\\n    function init(\\n        address owner,\\n        address dpp,\\n        address operator,\\n        address dodoApproveProxy\\n    ) external;\\n\\n    //=========== admin ==========\\n    function ratioSync() external;\\n\\n    function retrieve(\\n        address payable to,\\n        address token,\\n        uint256 amount\\n    ) external;\\n\\n    function reset(\\n        address assetTo,\\n        uint256 newLpFeeRate,\\n        uint256 newI,\\n        uint256 newK,\\n        uint256 baseOutAmount,\\n        uint256 quoteOutAmount,\\n        uint256 minBaseReserve,\\n        uint256 minQuoteReserve\\n    ) external returns (bool);\\n\\n    function tuneParameters(\\n        uint256 newLpFeeRate,\\n        uint256 newI,\\n        uint256 newK,\\n        uint256 minBaseReserve,\\n        uint256 minQuoteReserve\\n    ) external returns (bool);\\n\\n    function tunePrice(\\n        uint256 newI,\\n        uint256 minBaseReserve,\\n        uint256 minQuoteReserve\\n    ) external returns (bool);\\n\\n    function changeOracle(address newOracle) external;\\n\\n    function enableOracle() external;\\n\\n    function disableOracle(uint256 newI) external;\\n\\n    function setFreezeTimestamp(uint256 timestamp) external;\\n}\\n\",\"keccak256\":\"0xc3db242d7e6163994b451b783c1baf01053c9d28e8562f699764ef44da5fe79b\"},\"contracts/lib/Adminable.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.9;\\n\\nabstract contract Adminable {\\n    event AdminUpdated(address indexed user, address indexed newAdmin);\\n\\n    address public admin;\\n\\n    modifier onlyAdmin() virtual {\\n        require(msg.sender == admin, \\\"UNAUTHORIZED\\\");\\n\\n        _;\\n    }\\n\\n    function setAdmin(address newAdmin) public virtual onlyAdmin {\\n        _setAdmin(newAdmin);\\n    }\\n\\n    function _setAdmin(address newAdmin) internal {\\n        require(newAdmin != address(0), \\\"Can not set admin to zero address\\\");\\n        admin = newAdmin;\\n\\n        emit AdminUpdated(msg.sender, newAdmin);\\n    }\\n}\\n\",\"keccak256\":\"0xe47c97c0e3edad2d1df3e664376a7bb46e1aaf51b4c4acc73c4a2cfdc747185f\",\"license\":\"GPL-3.0\"},\"contracts/lib/CloneFactory.sol\":{\"content\":\"/*\\n\\n    Copyright 2020 DODO ZOO.\\n    SPDX-License-Identifier: Apache-2.0\\n\\n*/\\n\\npragma solidity 0.8.9;\\npragma experimental ABIEncoderV2;\\n\\ninterface ICloneFactory {\\n    function clone(address prototype) external returns (address proxy);\\n}\\n\\n// introduction of proxy mode design: https://docs.openzeppelin.com/upgrades/2.8/\\n// minimum implementation of transparent proxy: https://eips.ethereum.org/EIPS/eip-1167\\n\\ncontract CloneFactory is ICloneFactory {\\n    function clone(address prototype) external override returns (address proxy) {\\n        bytes20 targetBytes = bytes20(prototype);\\n        assembly {\\n            let clone := mload(0x40)\\n            mstore(clone, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(clone, 0x14), targetBytes)\\n            mstore(add(clone, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n            proxy := create(0, clone, 0x37)\\n        }\\n        require(proxy != address(0), \\\"DuetCloneFactory: address zero\\\");\\n        return proxy;\\n    }\\n}\\n\",\"keccak256\":\"0x28116103c7190e9ce1e7a34c02d882c699b9a540fb201ae0ee51a6c18ba42ac2\",\"license\":\"Apache-2.0\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060006200002060016200008d565b905080156200003d576000805460ff60a81b1916600160a81b1790555b801562000086576000805460ff60a81b19169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50620001c1565b60008054600160a81b900460ff161562000128578160ff166001148015620000c85750620000c630620001b260201b62000fda1760201c565b155b620001205760405162461bcd60e51b815260206004820152602e60248201526000805160206200180283398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b506000919050565b60005460ff808416600160a01b90920416106200018e5760405162461bcd60e51b815260206004820152602e60248201526000805160206200180283398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840162000117565b506000805460ff909216600160a01b0260ff60a01b19909216919091179055600190565b6001600160a01b03163b151590565b61163180620001d16000396000f3fe608060405234801561001057600080fd5b506004361061012b5760003560e01c80639e988ee3116100ad578063db715fea11610071578063db715fea1461028c578063ef23977c1461029f578063f5e95acb146102b2578063f7220971146102c5578063f851a440146102d857600080fd5b80639e988ee31461020c578063a5afd1b61461021f578063ad5c464814610253578063be7537f214610266578063caedbaf81461027957600080fd5b806344b7f78e116100f457806344b7f78e146101ad5780636494752a146101c0578063704b6c02146101d3578063708f0b3a146101e65780637d2c82d7146101f957600080fd5b806242f701146101305780630bd4651a146101455780631426ca9b146101745780632bc609d514610187578063434244311461019a575b600080fd5b61014361013e366004611316565b6102eb565b005b600554610158906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b600654610158906001600160a01b031681565b6101436101953660046113b1565b610670565b600854610158906001600160a01b031681565b6101436101bb3660046113b1565b61075b565b6101436101ce3660046113b1565b610840565b6101436101e13660046113b1565b610929565b6101436101f43660046113d5565b61095f565b6101436102073660046113b1565b610a65565b61014361021a3660046113b1565b610b50565b61015861022d366004611431565b60096020908152600092835260408084209091529082529020546001600160a01b031681565b600254610158906001600160a01b031681565b600754610158906001600160a01b031681565b600354610158906001600160a01b031681565b61014361029a3660046113b1565b610c33565b600154610158906001600160a01b031681565b6101436102c036600461146a565b610d14565b600454610158906001600160a01b031681565b600054610158906001600160a01b031681565b6000546001600160a01b0316331461031e5760405162461bcd60e51b815260040161031590611526565b60405180910390fd5b6001600160a01b0388811660009081526009602090815260408083208b851684529091529020541615801561037857506001600160a01b0387811660009081526009602090815260408083208c8516845290915290205416155b6103b35760405162461bcd60e51b815260206004820152600c60248201526b121055914810d4915055115160a21b6044820152606401610315565b801561048f5760405163cfed246b60e01b81526001600160a01b0389811660048301526000919085169063cfed246b9060240160206040518083038186803b1580156103fe57600080fd5b505afa158015610412573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610436919061154c565b1161048f5760405162461bcd60e51b8152602060048201526024808201527f447565742044707020466163746f72793a2073657420696e76616c6964206f7260448201526361636c6560e01b6064820152608401610315565b60008061049a610fe9565b915060006104a6611075565b600554600354604051634f115ccb60e01b81526001600160a01b03808516600483015292831660248201528e831660448201528d83166064820152608481018d905290821660a482015260c481018b905260e481018a9052888216610104820152871515610124820152861515610144820152919250841690634f115ccb9061016401600060405180830381600087803b15801561054357600080fd5b505af1158015610557573d6000803e3d6000fd5b505050506105668c84836110ae565b600480546040516306552ff360e01b81529294506001600160a01b03808516936306552ff3936105a19388938a938593929091169101611565565b600060405180830381600087803b1580156105bb57600080fd5b505af11580156105cf573d6000803e3d6000fd5b505050506001600160a01b038b811660008181526009602090815260408083208f86168085529083529281902080548887166001600160a01b031990911681179091558151948552918401929092528f8416838301529286166060830152608082019290925290517f5e55631db9f29584cb7b1abfa64a49ff89a39711c531b3c6bf05d389f62ac79392509081900360a00190a15050505050505050505050565b6000546001600160a01b0316331461069a5760405162461bcd60e51b815260040161031590611526565b6001600160a01b0381166107065760405162461bcd60e51b815260206004820152602d60248201527f447565745f6470705f666163746f72793a20646f646f417070726f766520697360448201526c207a65726f206164647265737360981b6064820152608401610315565b600480546001600160a01b0319166001600160a01b0383169081179091556040519081527f22e11bb50472c5926f73cb662487fea884eff39769745d27281599943f717c7f906020015b60405180910390a150565b6000546001600160a01b031633146107855760405162461bcd60e51b815260040161031590611526565b6001600160a01b0381166107f25760405162461bcd60e51b815260206004820152602e60248201527f447565745f6470705f666163746f72793a206470702074656d706c617465206960448201526d73207a65726f206164647265737360901b6064820152608401610315565b600680546001600160a01b0319166001600160a01b0383169081179091556040519081527fd005fff9c7f83c129aa07b4509db863643f2015e9ee77558797cd8b0d2b5c02a90602001610750565b6000546001600160a01b0316331461086a5760405162461bcd60e51b815260040161031590611526565b6001600160a01b0381166108dc5760405162461bcd60e51b815260206004820152603360248201527f447565745f6470705f666163746f72793a20647070206374726c2074656d706c604482015272617465206973207a65726f206164647265737360681b6064820152608401610315565b600880546001600160a01b0319166001600160a01b0383169081179091556040519081527e4dd2c6ac11259cc04ebd830dcab6eeeab3cade0f03a429cdfc29492bccd0bb90602001610750565b6000546001600160a01b031633146109535760405162461bcd60e51b815260040161031590611526565b61095c816111a6565b50565b6000546001600160a01b031633146109895760405162461bcd60e51b815260040161031590611526565b6001600160a01b0384811660009081526009602090815260408083208785168452909152902054166109ee5760405162461bcd60e51b815260206004820152600e60248201526d1c1bdbdb081b9bdd08195e1a5cdd60921b6044820152606401610315565b6001600160a01b038085166000908152600960209081526040808320938716835292905281902080546001600160a01b0319169055517f7ac52f5c0ee5de05666a9cb8cf51b1735f38e6b2e5a99b946b1a7fdbd2907ce290610a57908690869085908790611565565b60405180910390a150505050565b6000546001600160a01b03163314610a8f5760405162461bcd60e51b815260040161031590611526565b6001600160a01b038116610b025760405162461bcd60e51b815260206004820152603460248201527f447565745f6470705f666163746f72793a206470702061646d696e2074656d706044820152736c617465206973207a65726f206164647265737360601b6064820152608401610315565b600780546001600160a01b0319166001600160a01b0383169081179091556040519081527f550115cbed277252b3735b4662f486e262dc4d072a8d43c6cc571cf2e641e23690602001610750565b6000546001600160a01b03163314610b7a5760405162461bcd60e51b815260040161031590611526565b6001600160a01b038116610be55760405162461bcd60e51b815260206004820152602c60248201527f447565745f6470705f666163746f72793a206d61696e7461696e65722069732060448201526b7a65726f206164647265737360a01b6064820152608401610315565b600580546001600160a01b0319166001600160a01b0383169081179091556040519081527ffb734cad8abd874e9213b56ecae5e39d9569bada1d76cd5f5938869bc34647fb90602001610750565b6000546001600160a01b03163314610c5d5760405162461bcd60e51b815260040161031590611526565b6001600160a01b038116610cc65760405162461bcd60e51b815260206004820152602a60248201527f447565745f6470705f666163746f72793a206665654d6f64656c206973207a65604482015269726f206164647265737360b01b6064820152608401610315565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f602109af93f127e29acf890713b5893218f7e26815fcf6217510271969a4874190602001610750565b6000610d206001611251565b90508015610d3c576000805460ff60a81b1916600160a81b1790555b6001600160a01b038a16610da25760405162461bcd60e51b815260206004820152602760248201527f447565745f6470705f666163746f72793a2061646d696e206973207a65726f206044820152666164647265737360c81b6064820152608401610315565b610dab8a6111a6565b600280546001600160a01b03199081166001600160a01b03858116919091179092556001805482168c84161790556006805482168b84161790556007805482168a8416179055600880548216898416179055600580548216888416908117909155600380548316888516179055600480549092169286169290921790556040519081527ffb734cad8abd874e9213b56ecae5e39d9569bada1d76cd5f5938869bc34647fb9060200160405180910390a16040516001600160a01b03851681527f602109af93f127e29acf890713b5893218f7e26815fcf6217510271969a487419060200160405180910390a16040516001600160a01b03841681527f22e11bb50472c5926f73cb662487fea884eff39769745d27281599943f717c7f9060200160405180910390a16040516001600160a01b03891681527fd005fff9c7f83c129aa07b4509db863643f2015e9ee77558797cd8b0d2b5c02a9060200160405180910390a16040516001600160a01b03871681527e4dd2c6ac11259cc04ebd830dcab6eeeab3cade0f03a429cdfc29492bccd0bb9060200160405180910390a16040516001600160a01b03881681527f550115cbed277252b3735b4662f486e262dc4d072a8d43c6cc571cf2e641e2369060200160405180910390a18015610fce576000805460ff60a81b19169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050505050565b6001600160a01b03163b151590565b6001546006546040516340925bc760e11b81526001600160a01b0391821660048201526000929190911690638124b78e906024015b602060405180830381600087803b15801561103857600080fd5b505af115801561104c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110709190611590565b905090565b6001546007546040516340925bc760e11b81526001600160a01b0391821660048201526000929190911690638124b78e9060240161101e565b6001546008546040516340925bc760e11b81526001600160a01b0391821660048201526000929190911690638124b78e90602401602060405180830381600087803b1580156110fc57600080fd5b505af1158015611110573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111349190611590565b6002546040516306552ff360e01b81529192506001600160a01b03808416926306552ff39261116d928992899289921690600401611565565b600060405180830381600087803b15801561118757600080fd5b505af115801561119b573d6000803e3d6000fd5b505050509392505050565b6001600160a01b0381166112065760405162461bcd60e51b815260206004820152602160248201527f43616e206e6f74207365742061646d696e20746f207a65726f206164647265736044820152607360f81b6064820152608401610315565b600080546001600160a01b0319166001600160a01b0383169081178255604051909133917f101b8081ff3b56bbf45deb824d86a3b0fd38b7e3dd42421105cf8abe9106db0b9190a350565b60008054600160a81b900460ff161561129a578160ff1660011480156112765750303b155b6112925760405162461bcd60e51b8152600401610315906115ad565b506000919050565b60005460ff808416600160a01b90920416106112c85760405162461bcd60e51b8152600401610315906115ad565b506000805460ff909216600160a01b0260ff60a01b19909216919091179055600190565b919050565b6001600160a01b038116811461095c57600080fd5b803580151581146112ec57600080fd5b60008060008060008060008060006101208a8c03121561133557600080fd5b8935611340816112f1565b985060208a0135611350816112f1565b975060408a0135611360816112f1565b965060608a0135955060808a0135945060a08a0135935060c08a0135611385816112f1565b925061139360e08b01611306565b91506113a26101008b01611306565b90509295985092959850929598565b6000602082840312156113c357600080fd5b81356113ce816112f1565b9392505050565b600080600080608085870312156113eb57600080fd5b84356113f6816112f1565b93506020850135611406816112f1565b92506040850135611416816112f1565b91506060850135611426816112f1565b939692955090935050565b6000806040838503121561144457600080fd5b823561144f816112f1565b9150602083013561145f816112f1565b809150509250929050565b60008060008060008060008060006101208a8c03121561148957600080fd5b8935611494816112f1565b985060208a01356114a4816112f1565b975060408a01356114b4816112f1565b965060608a01356114c4816112f1565b955060808a01356114d4816112f1565b945060a08a01356114e4816112f1565b935060c08a01356114f4816112f1565b925060e08a0135611504816112f1565b91506101008a0135611515816112f1565b809150509295985092959850929598565b6020808252600c908201526b15539055551213d49256915160a21b604082015260600190565b60006020828403121561155e57600080fd5b5051919050565b6001600160a01b03948516815292841660208401529083166040830152909116606082015260800190565b6000602082840312156115a257600080fd5b81516113ce816112f1565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b60608201526080019056fea2646970667358221220806c0a58e0564abee46b6f9d7db0979a95a6067bcaae61af69d9022058b4543964736f6c63430008090033496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061012b5760003560e01c80639e988ee3116100ad578063db715fea11610071578063db715fea1461028c578063ef23977c1461029f578063f5e95acb146102b2578063f7220971146102c5578063f851a440146102d857600080fd5b80639e988ee31461020c578063a5afd1b61461021f578063ad5c464814610253578063be7537f214610266578063caedbaf81461027957600080fd5b806344b7f78e116100f457806344b7f78e146101ad5780636494752a146101c0578063704b6c02146101d3578063708f0b3a146101e65780637d2c82d7146101f957600080fd5b806242f701146101305780630bd4651a146101455780631426ca9b146101745780632bc609d514610187578063434244311461019a575b600080fd5b61014361013e366004611316565b6102eb565b005b600554610158906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b600654610158906001600160a01b031681565b6101436101953660046113b1565b610670565b600854610158906001600160a01b031681565b6101436101bb3660046113b1565b61075b565b6101436101ce3660046113b1565b610840565b6101436101e13660046113b1565b610929565b6101436101f43660046113d5565b61095f565b6101436102073660046113b1565b610a65565b61014361021a3660046113b1565b610b50565b61015861022d366004611431565b60096020908152600092835260408084209091529082529020546001600160a01b031681565b600254610158906001600160a01b031681565b600754610158906001600160a01b031681565b600354610158906001600160a01b031681565b61014361029a3660046113b1565b610c33565b600154610158906001600160a01b031681565b6101436102c036600461146a565b610d14565b600454610158906001600160a01b031681565b600054610158906001600160a01b031681565b6000546001600160a01b0316331461031e5760405162461bcd60e51b815260040161031590611526565b60405180910390fd5b6001600160a01b0388811660009081526009602090815260408083208b851684529091529020541615801561037857506001600160a01b0387811660009081526009602090815260408083208c8516845290915290205416155b6103b35760405162461bcd60e51b815260206004820152600c60248201526b121055914810d4915055115160a21b6044820152606401610315565b801561048f5760405163cfed246b60e01b81526001600160a01b0389811660048301526000919085169063cfed246b9060240160206040518083038186803b1580156103fe57600080fd5b505afa158015610412573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610436919061154c565b1161048f5760405162461bcd60e51b8152602060048201526024808201527f447565742044707020466163746f72793a2073657420696e76616c6964206f7260448201526361636c6560e01b6064820152608401610315565b60008061049a610fe9565b915060006104a6611075565b600554600354604051634f115ccb60e01b81526001600160a01b03808516600483015292831660248201528e831660448201528d83166064820152608481018d905290821660a482015260c481018b905260e481018a9052888216610104820152871515610124820152861515610144820152919250841690634f115ccb9061016401600060405180830381600087803b15801561054357600080fd5b505af1158015610557573d6000803e3d6000fd5b505050506105668c84836110ae565b600480546040516306552ff360e01b81529294506001600160a01b03808516936306552ff3936105a19388938a938593929091169101611565565b600060405180830381600087803b1580156105bb57600080fd5b505af11580156105cf573d6000803e3d6000fd5b505050506001600160a01b038b811660008181526009602090815260408083208f86168085529083529281902080548887166001600160a01b031990911681179091558151948552918401929092528f8416838301529286166060830152608082019290925290517f5e55631db9f29584cb7b1abfa64a49ff89a39711c531b3c6bf05d389f62ac79392509081900360a00190a15050505050505050505050565b6000546001600160a01b0316331461069a5760405162461bcd60e51b815260040161031590611526565b6001600160a01b0381166107065760405162461bcd60e51b815260206004820152602d60248201527f447565745f6470705f666163746f72793a20646f646f417070726f766520697360448201526c207a65726f206164647265737360981b6064820152608401610315565b600480546001600160a01b0319166001600160a01b0383169081179091556040519081527f22e11bb50472c5926f73cb662487fea884eff39769745d27281599943f717c7f906020015b60405180910390a150565b6000546001600160a01b031633146107855760405162461bcd60e51b815260040161031590611526565b6001600160a01b0381166107f25760405162461bcd60e51b815260206004820152602e60248201527f447565745f6470705f666163746f72793a206470702074656d706c617465206960448201526d73207a65726f206164647265737360901b6064820152608401610315565b600680546001600160a01b0319166001600160a01b0383169081179091556040519081527fd005fff9c7f83c129aa07b4509db863643f2015e9ee77558797cd8b0d2b5c02a90602001610750565b6000546001600160a01b0316331461086a5760405162461bcd60e51b815260040161031590611526565b6001600160a01b0381166108dc5760405162461bcd60e51b815260206004820152603360248201527f447565745f6470705f666163746f72793a20647070206374726c2074656d706c604482015272617465206973207a65726f206164647265737360681b6064820152608401610315565b600880546001600160a01b0319166001600160a01b0383169081179091556040519081527e4dd2c6ac11259cc04ebd830dcab6eeeab3cade0f03a429cdfc29492bccd0bb90602001610750565b6000546001600160a01b031633146109535760405162461bcd60e51b815260040161031590611526565b61095c816111a6565b50565b6000546001600160a01b031633146109895760405162461bcd60e51b815260040161031590611526565b6001600160a01b0384811660009081526009602090815260408083208785168452909152902054166109ee5760405162461bcd60e51b815260206004820152600e60248201526d1c1bdbdb081b9bdd08195e1a5cdd60921b6044820152606401610315565b6001600160a01b038085166000908152600960209081526040808320938716835292905281902080546001600160a01b0319169055517f7ac52f5c0ee5de05666a9cb8cf51b1735f38e6b2e5a99b946b1a7fdbd2907ce290610a57908690869085908790611565565b60405180910390a150505050565b6000546001600160a01b03163314610a8f5760405162461bcd60e51b815260040161031590611526565b6001600160a01b038116610b025760405162461bcd60e51b815260206004820152603460248201527f447565745f6470705f666163746f72793a206470702061646d696e2074656d706044820152736c617465206973207a65726f206164647265737360601b6064820152608401610315565b600780546001600160a01b0319166001600160a01b0383169081179091556040519081527f550115cbed277252b3735b4662f486e262dc4d072a8d43c6cc571cf2e641e23690602001610750565b6000546001600160a01b03163314610b7a5760405162461bcd60e51b815260040161031590611526565b6001600160a01b038116610be55760405162461bcd60e51b815260206004820152602c60248201527f447565745f6470705f666163746f72793a206d61696e7461696e65722069732060448201526b7a65726f206164647265737360a01b6064820152608401610315565b600580546001600160a01b0319166001600160a01b0383169081179091556040519081527ffb734cad8abd874e9213b56ecae5e39d9569bada1d76cd5f5938869bc34647fb90602001610750565b6000546001600160a01b03163314610c5d5760405162461bcd60e51b815260040161031590611526565b6001600160a01b038116610cc65760405162461bcd60e51b815260206004820152602a60248201527f447565745f6470705f666163746f72793a206665654d6f64656c206973207a65604482015269726f206164647265737360b01b6064820152608401610315565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f602109af93f127e29acf890713b5893218f7e26815fcf6217510271969a4874190602001610750565b6000610d206001611251565b90508015610d3c576000805460ff60a81b1916600160a81b1790555b6001600160a01b038a16610da25760405162461bcd60e51b815260206004820152602760248201527f447565745f6470705f666163746f72793a2061646d696e206973207a65726f206044820152666164647265737360c81b6064820152608401610315565b610dab8a6111a6565b600280546001600160a01b03199081166001600160a01b03858116919091179092556001805482168c84161790556006805482168b84161790556007805482168a8416179055600880548216898416179055600580548216888416908117909155600380548316888516179055600480549092169286169290921790556040519081527ffb734cad8abd874e9213b56ecae5e39d9569bada1d76cd5f5938869bc34647fb9060200160405180910390a16040516001600160a01b03851681527f602109af93f127e29acf890713b5893218f7e26815fcf6217510271969a487419060200160405180910390a16040516001600160a01b03841681527f22e11bb50472c5926f73cb662487fea884eff39769745d27281599943f717c7f9060200160405180910390a16040516001600160a01b03891681527fd005fff9c7f83c129aa07b4509db863643f2015e9ee77558797cd8b0d2b5c02a9060200160405180910390a16040516001600160a01b03871681527e4dd2c6ac11259cc04ebd830dcab6eeeab3cade0f03a429cdfc29492bccd0bb9060200160405180910390a16040516001600160a01b03881681527f550115cbed277252b3735b4662f486e262dc4d072a8d43c6cc571cf2e641e2369060200160405180910390a18015610fce576000805460ff60a81b19169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050505050565b6001600160a01b03163b151590565b6001546006546040516340925bc760e11b81526001600160a01b0391821660048201526000929190911690638124b78e906024015b602060405180830381600087803b15801561103857600080fd5b505af115801561104c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110709190611590565b905090565b6001546007546040516340925bc760e11b81526001600160a01b0391821660048201526000929190911690638124b78e9060240161101e565b6001546008546040516340925bc760e11b81526001600160a01b0391821660048201526000929190911690638124b78e90602401602060405180830381600087803b1580156110fc57600080fd5b505af1158015611110573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111349190611590565b6002546040516306552ff360e01b81529192506001600160a01b03808416926306552ff39261116d928992899289921690600401611565565b600060405180830381600087803b15801561118757600080fd5b505af115801561119b573d6000803e3d6000fd5b505050509392505050565b6001600160a01b0381166112065760405162461bcd60e51b815260206004820152602160248201527f43616e206e6f74207365742061646d696e20746f207a65726f206164647265736044820152607360f81b6064820152608401610315565b600080546001600160a01b0319166001600160a01b0383169081178255604051909133917f101b8081ff3b56bbf45deb824d86a3b0fd38b7e3dd42421105cf8abe9106db0b9190a350565b60008054600160a81b900460ff161561129a578160ff1660011480156112765750303b155b6112925760405162461bcd60e51b8152600401610315906115ad565b506000919050565b60005460ff808416600160a01b90920416106112c85760405162461bcd60e51b8152600401610315906115ad565b506000805460ff909216600160a01b0260ff60a01b19909216919091179055600190565b919050565b6001600160a01b038116811461095c57600080fd5b803580151581146112ec57600080fd5b60008060008060008060008060006101208a8c03121561133557600080fd5b8935611340816112f1565b985060208a0135611350816112f1565b975060408a0135611360816112f1565b965060608a0135955060808a0135945060a08a0135935060c08a0135611385816112f1565b925061139360e08b01611306565b91506113a26101008b01611306565b90509295985092959850929598565b6000602082840312156113c357600080fd5b81356113ce816112f1565b9392505050565b600080600080608085870312156113eb57600080fd5b84356113f6816112f1565b93506020850135611406816112f1565b92506040850135611416816112f1565b91506060850135611426816112f1565b939692955090935050565b6000806040838503121561144457600080fd5b823561144f816112f1565b9150602083013561145f816112f1565b809150509250929050565b60008060008060008060008060006101208a8c03121561148957600080fd5b8935611494816112f1565b985060208a01356114a4816112f1565b975060408a01356114b4816112f1565b965060608a01356114c4816112f1565b955060808a01356114d4816112f1565b945060a08a01356114e4816112f1565b935060c08a01356114f4816112f1565b925060e08a0135611504816112f1565b91506101008a0135611515816112f1565b809150509295985092959850929598565b6020808252600c908201526b15539055551213d49256915160a21b604082015260600190565b60006020828403121561155e57600080fd5b5051919050565b6001600160a01b03948516815292841660208401529083166040830152909116606082015260800190565b6000602082840312156115a257600080fd5b81516113ce816112f1565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b60608201526080019056fea2646970667358221220806c0a58e0564abee46b6f9d7db0979a95a6067bcaae61af69d9022058b4543964736f6c63430008090033",
  "devdoc": {
    "author": "So. Lu",
    "kind": "dev",
    "methods": {
      "createDPPController(address,address,address,uint256,uint256,uint256,address,bool,bool)": {
        "params": {
          "baseToken_": "basetoken address",
          "creator_": "dpp controller's admin and dppAdmin's operator",
          "i_": "base to quote price, decimals 18 - baseTokenDecimals+ quoteTokenDecimals. If use oracle, i set here wouldn't be used.",
          "isOpenTwap_": "use twap price or not",
          "isOracleEnabled_": "use oracle or not",
          "k_": "a param for swap curve, limit in [0，10**18], unit is  10**18，0 is stable price curve，10**18 is bonding curve like uni",
          "lpFeeRate_": "lp fee rate, unit is 10**18, range in [0, 10**18], eg 3,00000,00000,00000 = 0.003 = 0.3%",
          "o_": "oracle address",
          "quoteToken_": "quotetoken address"
        }
      }
    },
    "title": "DppController",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "createDPPController(address,address,address,uint256,uint256,uint256,address,bool,bool)": {
        "notice": "create dpp Controller"
      },
      "updateDefaultFeeModel(address)": {
        "notice": "change dpp param - dodo feeModel"
      },
      "updateDefaultMaintainer(address)": {
        "notice": "change dpp param - dodo maintainer"
      },
      "updateDodoApprove(address)": {
        "notice": "change dpp param - dodo approve"
      }
    },
    "notice": "Use this contract to create controller",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 10176,
        "contract": "contracts/factory/DuetDppFactory.sol:DuetDPPFactory",
        "label": "admin",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 130,
        "contract": "contracts/factory/DuetDppFactory.sol:DuetDPPFactory",
        "label": "_initialized",
        "offset": 20,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 133,
        "contract": "contracts/factory/DuetDppFactory.sol:DuetDPPFactory",
        "label": "_initializing",
        "offset": 21,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 9038,
        "contract": "contracts/factory/DuetDppFactory.sol:DuetDPPFactory",
        "label": "CLONE_FACTORY",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 9040,
        "contract": "contracts/factory/DuetDppFactory.sol:DuetDPPFactory",
        "label": "WETH",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 9042,
        "contract": "contracts/factory/DuetDppFactory.sol:DuetDPPFactory",
        "label": "dodoDefautMtFeeRateModel",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 9044,
        "contract": "contracts/factory/DuetDppFactory.sol:DuetDPPFactory",
        "label": "dodoApproveProxy",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 9046,
        "contract": "contracts/factory/DuetDppFactory.sol:DuetDPPFactory",
        "label": "dodoDefaultMaintainer",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 9048,
        "contract": "contracts/factory/DuetDppFactory.sol:DuetDPPFactory",
        "label": "dppTemplate",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 9050,
        "contract": "contracts/factory/DuetDppFactory.sol:DuetDPPFactory",
        "label": "dppAdminTemplate",
        "offset": 0,
        "slot": "7",
        "type": "t_address"
      },
      {
        "astId": 9052,
        "contract": "contracts/factory/DuetDppFactory.sol:DuetDPPFactory",
        "label": "dppControllerTemplate",
        "offset": 0,
        "slot": "8",
        "type": "t_address"
      },
      {
        "astId": 9058,
        "contract": "contracts/factory/DuetDppFactory.sol:DuetDPPFactory",
        "label": "registry",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_mapping(t_address,t_address))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_mapping(t_address,t_address))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => address))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_address)"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}